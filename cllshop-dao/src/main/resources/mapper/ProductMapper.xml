<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.lnsf.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.lnsf.entity.Product" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="smallTypeId" property="smalltypeid" jdbcType="INTEGER" />
    <result column="bigTypeId" property="bigtypeid" jdbcType="INTEGER" />
    <result column="storeId" property="storeid" jdbcType="INTEGER" />
    <result column="hot" property="hot" jdbcType="INTEGER" />
    <result column="hotTime" property="hottime" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
    <resultMap id="resultByStoreId" type="cn.edu.lnsf.entity.Product" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="BIGINT" />
        <result column="images" property="images" jdbcType="VARCHAR" />
        <result column="stock" property="stock" jdbcType="INTEGER" />
        <result column="smallTypeId" property="smalltypeid" jdbcType="INTEGER" />
        <result column="bigTypeId" property="bigtypeid" jdbcType="INTEGER" />
        <result column="storeId" property="storeid" jdbcType="INTEGER" />
        <result column="hot" property="hot" jdbcType="INTEGER" />
        <result column="hotTime" property="hottime" jdbcType="TIMESTAMP" />
        <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
        <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <association property="bigType" javaType="cn.edu.lnsf.entity.BigType">
            <id property="id" column="bid"/>
            <result column="bname" property="name" />
        </association>
        <association property="smallType" javaType="cn.edu.lnsf.entity.SmallType">
            <id property="id" column="sid"/>
            <result column="sname" property="name" />
        </association>
    </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, description, name, price, images, stock, smallTypeId, bigTypeId, storeId, hot, 
    hotTime, createTime, updateTime, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.lnsf.entity.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from products
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from products
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.lnsf.entity.ProductExample" >
    delete from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.lnsf.entity.Product" >
    insert into products (id, description, name, 
      price, images, stock, 
      smallTypeId, bigTypeId, storeId, 
      hot, hotTime, createTime, 
      updateTime, status)
    values (#{id,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{price,jdbcType=BIGINT}, #{images,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, 
      #{smalltypeid,jdbcType=INTEGER}, #{bigtypeid,jdbcType=INTEGER}, #{storeid,jdbcType=INTEGER}, 
      #{hot,jdbcType=INTEGER}, #{hottime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.lnsf.entity.Product" >
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="smalltypeid != null" >
        smallTypeId,
      </if>
      <if test="bigtypeid != null" >
        bigTypeId,
      </if>
      <if test="storeid != null" >
        storeId,
      </if>
      <if test="hot != null" >
        hot,
      </if>
      <if test="hottime != null" >
        hotTime,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="smalltypeid != null" >
        #{smalltypeid,jdbcType=INTEGER},
      </if>
      <if test="bigtypeid != null" >
        #{bigtypeid,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
      <if test="hot != null" >
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="hottime != null" >
        #{hottime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.lnsf.entity.ProductExample" resultType="java.lang.Integer" >
    select count(*) from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update products
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.smalltypeid != null" >
        smallTypeId = #{record.smalltypeid,jdbcType=INTEGER},
      </if>
      <if test="record.bigtypeid != null" >
        bigTypeId = #{record.bigtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.storeid != null" >
        storeId = #{record.storeid,jdbcType=INTEGER},
      </if>
      <if test="record.hot != null" >
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.hottime != null" >
        hotTime = #{record.hottime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update products
    set id = #{record.id,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=BIGINT},
      images = #{record.images,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      smallTypeId = #{record.smalltypeid,jdbcType=INTEGER},
      bigTypeId = #{record.bigtypeid,jdbcType=INTEGER},
      storeId = #{record.storeid,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      hotTime = #{record.hottime,jdbcType=TIMESTAMP},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.lnsf.entity.Product" >
    update products
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="smalltypeid != null" >
        smallTypeId = #{smalltypeid,jdbcType=INTEGER},
      </if>
      <if test="bigtypeid != null" >
        bigTypeId = #{bigtypeid,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        storeId = #{storeid,jdbcType=INTEGER},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="hottime != null" >
        hotTime = #{hottime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.lnsf.entity.Product" >
    update products
    set description = #{description,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      images = #{images,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      smallTypeId = #{smalltypeid,jdbcType=INTEGER},
      bigTypeId = #{bigtypeid,jdbcType=INTEGER},
      storeId = #{storeid,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      hotTime = #{hottime,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selAllByStoreId" resultMap="resultByStoreId">
    select products.*,smalltype.id sid, smalltype.name sname,bigtype.id bid,bigtype.name bname
    from products,smalltype,bigtype
    <where>
      and products.smallTypeId=smalltype.id
      and products.bigTypeId=bigtype.id
      and products.storeId=#{id}
      and products.status=1
    </where>
  </select>

  <select id="selByStoreIdAndPid" resultMap="resultByStoreId">
    select products.*,smalltype.id sid, smalltype.name sname,bigtype.id bid,bigtype.name bname
    from products,smalltype,bigtype
    <where>
      and products.smallTypeId=smalltype.id
      and products.bigTypeId=bigtype.id
      and products.storeId=#{sid}
      and products.status=1
      and products.id=#{pid}
    </where>
  </select>

</mapper>